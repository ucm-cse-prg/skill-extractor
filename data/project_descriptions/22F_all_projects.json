{
    "22F-1-Metric Sync Engine": "Background  \nSweep  designs and manufactures industrial wireless meters and big data workflow software for real -time equipment \nmonitoring. We have recently launched the SweepAPI, a simple cloud -based data gathering platform for storing and \nanalyzing time series data in a scal able fashion  \n \nProblem(s)  \nWhen there is no available external access to the SweepAPI  due to an outage, external services depending on receiving \nvital time metric data within an organization run the risk of data loss if not properly stored and accounted for before \naccess is restored. This problem can be mitigated by developing an in -memory /file (sqlite3) DB solution that can \nbuffer SweepAPI REST requests for stored metric data and replay them in -order once an internet connection is \navailable again. This Metric Sync Engine  should be available as a library to an engineer to buffer and upload SweepAPI \nmetric requests once an internet connection is available. Engineers using these functions must be able to set custom \ncallbacks that allow for extended functionality that can trigger before or after a metric or set of metrics are sent.  \n \nObjectives  \nTeam will develop a software library that will allow an engineer to buffer time series metric API requests when an \ninternet connection is lost. Engineers must be able to allow for custom callbacks that can occur before and/or after \ndata is sent or if data must be modified in some way before sending. The sync engine will be tested against a server \nproviding metric data to the team's application. Once internet connection is re -established, the goal will be to send \nthese buffered metric elements to the SweepAP I and confirm that the buffered data is uploaded and that the local \ncopy of the data is removed upon confirmation. Engineers must be able to install these packages through NPM \npackage manager and/or PIP.  \nExtended goal if time permits would be to provide a  one-page dashboard that provides simple metrics about \ncurrent size of the REST API metric buffer, past buffering activity. (i.e., is the buffer currently in use, how many \nsuccessful sent buffer events have occurred in the last day, average event downtime,  any reported errors sending \nbuffers).",
    "22F-2-Training Monitoring App": "Background   \nWestern Digital Corporation  (WDC) is an American computer hard disk drive (HDD) and solid -state drive (SSD) \nmanufacturer and data storage company. The Flash SSD engineering department is located in Milpitas, California. We \ndesign, develop and test world class flash memory products.  \n \nProblem(s)  \nWDC hires many new engineers each year in the Silicon Technology and Manufacturing (STM) department for \nvarious functions within the department. Their training involves various sessions/classes/courses for different \nfunctions in STM. New hires  are recruited at different times, so it is generally not possible to perform group training.  \nIn order to  formalize and streamline the training program, WDC would like to have a Web -based App where \nmanagers can assign different online training classes to new hires. Upon finishing their classes, the new hire employees \nshould be able to  demonstrate their comple tion of the training.  \n \nObjectives  \nThe web app should provide a login interface for managers and new hire employees. Managers should be able to \ncreate (or import) a list of online classes that are internal to the STM department. The app should allow the set up of \ndifferent departments or functions for different managers and employees to choose from. Managers should be able to \nchoose 10 -20 courses from a set of ~200 to assign to new hires. Managers should be able to define the start and finish \ndates. Upon comp letion of the classes, the new hire employee should be able to demonstrate their completion of \nclasses by answering questions or presenting their understanding to the manager. Once a new hire employee indicates \ncompletion of a course, the manager should be  able to confirm this after reviewing the answers or presentations. Each \nfunction and each department should be able to summarize the statistical data on employee completion dates from \nstart to finish. The app should also be able to display an overview of how many managers are training how many \nemployees and a chart of how  many trainees are in progress.",
    "22F-3-DevTracker": "Background  \nWestern Digital  (WDC) is a data infrastructure company producing hard disk drives (HDDs), solid -state drives \n(SSDs) and other flash memory -based data storage products, headquartered in San Jose, California. It designs, \nmanufactures, and sells data technology products, including storage devices, data center systems and cloud storage \nservices. WDC\u2019s engineering organization u tilizes Apache Subversion (SVN) for software versioning and revision \ncontrol for different projects, and in different departments.  \n \nProblem(s)  \nManagement needs to have data about the engineer development activities among different projects so they can make  \nbetter decisions about the resource planning for current and future projects. The aim is for WDC\u2019s engineering \norganization to improve resource planning for future projects and have a better understanding of actual resources \nspent on currently active proj ects. \n \nObjectives  \nThe team is requested to develop a web application to enable gathering of data about the code check -in activities in \nSVN for each project and generate key performance indicator (KPI) reports for management to have a better \nunderstanding o f resource allocation.  \nAt the end of this project, WDC would like to see a workable web application that can get data from SVN and \ngenerate KPI reports. A responsive web user interface to provide users with the correct KPI result is expected.",
    "22F-4-Training Matrix": "Background   \nBetts Company  is a sixth-generation  family -owned manufacturer and supplier of springs and heavy -duty truck parts \nlocated in Fresno, CA. In order to ensure a safe and productive work environment, the company needs to ensure all \nemployees are properly trained for the tasks they are assigned.  \n \nProblem(s)  \nBetts Company would like to see a software solution created to collect, warehouse, and perform data analytics for the \ntraining required throughout the organization. Today the ability of the organization to understand the training of each \nindivi dual is difficult to manage. The information is collected, but it is difficult  to sort out who is trained, what skill \nlevel they possess, and when training needs to reoccur.  \n \nObjectives  \nWe need a database (SQL) solution that can be housed on Microsoft Shar ePoint. The software needs a friendly user  \ninterface to allow HR to input new records. It also needs an interface for other designated users to retrieve operator  \ntraining records. The software should be able to provide notification of employee training requirements. We should be  \nable to analyze who is trained in a specific work center or what training is required for an operator to work in a work  \ncenter.",
    "22F-5-Motion Tracking by Virtual Reality": "Background  \nValley Children's Hospital  (VCH) is a healthcare institution located in the central valley of California. VCH \nprovides excellent healthcare service to all the children in the central valley. This project will focus on the neurological \nexamination using virtual reality.  \n \nProblem(s)  \nThere is a need for improving the accuracy of the neurological exam. In order to enhance virtual medicine services  \n(telemedicine, remote services) this project will explore the use of Virtual Reality (VR) to track movement during \nneurological examinations.  \n \n \nObjectives  \nThe goal is to obtain precisely quantifiable data that can inform our understanding of the relationship between visual \nand motor processes during task performance.  The objective of this project is to create a VR environment to analyze \nelbow flexion and extension, and to extract the data regarding  eye-tracking and motion -capture. As a premium \nobjective, the team will analyze the velocity and the coordination of that movement in VR.",
    "22F-6-Loading Assistant": "Background   \nAs the preferred leader in  temperature -controlled warehousing and logistics services, United States Cold Storage  \n(USCS) offers highly reliable, cost -effective and environmentally sustainable solutions for the frozen and refrigerated \nfood industries. Our approach is to build high -quality warehouses equipped with the newest, most efficient \nrefrigeration technology available and engage strong local management teams who continuously measure and improve \nperformance. USCS manages more than 376 million cubic feet of temperature -controlled warehouse and distribution \nspace in 42 facilities located across the United States. USCS is the third largest public refrigerated warehousing (PRW) \nlogistics provider in North America and employs more than 3,500 service professionals.  \nUSCS also offers logi stics and transportation services. Our consolidation programs are the best in the U.S. - \nbuilding full trucks from less than truckload (LTL) shipments and helping our customers be more efficient. We have \nnationwide coverage and a flexible distribution mode l that fits many business needs. Goods get to market efficiently, \nconsistently, and most importantly - safely.  \nOur transportation management system (TMS) interfaces with all USCS operating systems to access customer \norder information, deliver electronic da ta interchange (EDI) transaction sets and update reporting needs for every \nstage of the transportation management process.  \n \nProblem(s)  \nUSCS loads many trucks throughout the day. Loading can require varying degrees of skill, depending on weight, \nproduct dim ensions, pallet weights, pallet counts, and various other factors. At times, there are other components \nwhich need to be additionally taken into account, such as truck tare weight, fuel levels, etc.  \nMost times, loading a truck with proper weight distribution is a skill that can be learned with time and experience. \nAs we are facing tougher times in the industry, and noticing a higher turnover, we would like to see if we can expedite \nthis process and provide a suggested loading pattern to users base d on key components of the order and truck. (May \nneed two input screens for order info/truck info? - open to ideas on this).  \nWhen trucks are loaded, there are two weights to consider - Gross weight (total truck weight) or Axle weight \n(weight which is allowed on certain axles of the trailer). We would like this tool to focus on the Axle weight overages. \nBy law in California, we m ust abide by the following axle weight restrictions when loading a truck: 12,000lbs - Nose, \n34,000 lbs - Middle and 34,000 lbs - Tail. See here for more information about proper axle distribution:  \n- https://proxy.qualtrics.com/proxy/?url=https%3A%2F%2Fdot.ca.gov%2F -%2Fm edia%2Fdot -\nmedia%2Fprograms%2Ftraffic -operations%2Fdocuments%2Ff0019537 -axle-group -graphic -\na11y.pdf&token=m28G4zRbflUiMqGKTagkWAu2IFgmEjg1UcWKgMAPU0Y%3D  \n- https://proxy.qualtrics.com/proxy/?url=https%3A%2F%2Fdot.ca.gov%2Fprograms%2Ftraffic -\noperations%2Flegal -truck -access%2Fweight -\nlimitation&token=7mI if2QYxyoleg%2BETTy%2F662iVIxAlDzkReFDYFYW8C8%3D   \nOur operations are always looking to improve on efficiencies. Currently we have several facilities who face many \nchallenges with loading over axles because of the variables and constant influx of new associa tes. We hope by \nintroducing a tool to help distinguish correct loading patterns, we can reduce the need to rework trucks, thus \neliminating unnecessary labor and or wasted time.  \n \nObjectives  \nWe would like this tool to be user friendly, quick, and efficient ( should not take longer than 5 mins to input \ninformation and receive loading pattern). We are open to design ideas and welcome the students to try to come up \nwith something that falls into line with our organization and industry (warehousing and logistics).  \nFor output we are open to ideas on what the output actually looks like but  thinking since we would need to give \nout to the warehouse for loading, a printed paper loading pattern would be best.  \nWe would like to see a functioning website or application wher e key truck and order information can be entered. \nBased on the entries a loading pattern should be provided as the expected output.  \nWe will measure the success of the tool by tracking how many trucks are returned to be re -worked vs how many \nare loaded corr ectly with no weight issues (i.e., overweight). We can also monitor weight on the scales of the trailer.",
    "22F-7-TA Allocation Algorithm Implementation": "Background  \nThe client is the Computer Science & Engineering Department  at UC Merced. Our business is to teach \nComputer Science, and we are located at the heart of the Central Valley, in the bustling little town of Merced. A major \ncomponent of effective Computer Science education is practical laboratory sessions, and we rely heavily on Teaching \nAssistants (TAs) to run those activities.  \nTAs are selected from the pool of graduate students in our department, but since there may often be more \ngraduate students than the number of TA positions available, this means that not every gr aduate student is guaranteed \na TA position. When this situation arises, it is necessary to allocate the TAs based on a strict set of rules that the \ndepartment has agreed upon, so that everyone is onboard.  \n \nProblem(s)  \nThe department has developed a formula for determining TA eligibility and priority, based on several factors, \nincluding experience in TAing courses, evaluations, etc. Applying the formula by hand is an extremely cumbersome, \nand error prone process, sometimes resulting in unfair allocations.  \nAutomating the process is essential, especially given the growth of the department, in terms of both faculty, as \nwell as graduate and undergraduate students.  \n \nObjectives  \nIf a team takes on this project, they are asked to develop a database -driven web appli cation that allows the user to see \nTA allocation history, current eligibility and priority scores for each graduate student and faculty member, as well as \nthe ability to create an allocation, based on faculty and student preferences.  \nThe application should  be accessible via a web interface, with data stored on some server (preferably some SQL  \nflavor). Since the data is sensitive, security would be of utmost importance.  \nThere is currently a prototype application already developed, which can be used as inspir ation for the project, but \nthe prototype lacks a lot of necessary features as it is just a proof -of-concept.  \nIf a team takes on this project, more specific details will be provided, especially around the allocation formula,  \nnecessary for computing eligibil ity and priority.",
    "22F-8-Smart Rodent Detection": "Background  \nAgrecom  is a biosecurity solutions company founded in 1995. Initially focused on service and sales into the poultry  \nindustry, it now specializes in water treatment, sanitation, vector control and innovation in the live production \nagricultural  \nsector  \n \nProblem(s)  \nWe need to be able to assess the impacts of rodents easily, and automatically on a premise. Traditional manual \nobservations require night visits and estimated assessment of a mammal prone to  hiding from humans. Deployment \nof automated camera systems that can detect, count and communicate activity and statistical data for the size and \nfrequency of rodent activity will be a vast improvement of the current status quo.  \n \nObjectives  \nStage 1: Develo p an AI engine to classify rodents from still or moving pictures (provided by Agrecom).  \nStage 2: Deploy the engine on a device with a suitable low light camera selected or developed for the purpose that can \nbe deployed in the real world  \nStage 3: Push activ ity and statistics to a cloud platform for review",
    "22F-9-Relevance -Weighted Meeting Scheduler": "Background  \nIn the Software Capstone - Innovate to Grow program we aim to develop multiple modules that will combine to \naddress problems and user needs while searching and organizing information to create new knowledge. Previous \nprojects included aggregation of data f rom multiple apps, merging selected results from multiple searches, \nconstructing composite time ranges and geographic areas for a search. These projects are supported by \nVeracruz.Ventures , a company based in Portugal that focuses on smart farms, applying a nd developing cutting -edge \ntechnology including data management.  \n \nProblem(s)  \nAvailable technologies to find meeting times assume that every participant:  \n- has the same relevance to the meeting;  \n- must be present to the whole meeting;  \n- can't make time available or change mind about it.  \nAs a result, meetings may be canceled, postponed to infinity, or lacking key participants. The most popular such \nservices include Doodle and When2Meet.  \n \nObjectives  \nBuild an app similar to When2Meet, but with the following  differences.  \n- Participants can express an \"availability value\" for each time slot.  \n- Organizer: can express a \"relevance value\" of each participant.  \n- The calendar displays the weighted availability of each time slot. The team will be provided the formulas, an d \noptions to select values and visualize the results in a time slot.",
    "22F-10-Constructing Composite Geographical Areas for a Search - Phase 2": "Background  \nIn the Software Capstone - Innovate to Grow program we aim to develop multiple modules that will combine to \naddress problems and user needs while searching and organizing information to create new knowledge. Previous \nprojects included aggregation of data from multiple apps, merging selected results from multiple searches, \nconstructing composite time ranges an d geographic areas for a search. These projects are supported by \nVeracruz.Ventures , a company based in Portugal that focuses on smart farms, applying and developing cutting -edge \ntechnology including data management.  \n \nProblem(s)  \nTypical \"advanced\" search systems enable users to select or enter keywords in selected database fields, and sometimes \nprovide limited support for boolean operators. Creating boolean searches is time consuming and error prone when \ninvolving logic across different f ields (e.g., what -where -when -who), and can lead to the need to reconstruct and rerun \na whole search. It would be desirable to construct the logic of a boolean search prior to running the search: in this \nproject we narrow the focus to geography (where).  \nIf a user searches for something in an area of interest that is not rectangular, and they use typical map search support, \nthey still receive unneeded results outside their area of interest, or they have to repeat the search in multiple smaller \nareas. Let's  consider this example: the user wants to find a rental right on the ocean beachfront somewhere in \nSouthern California. To achieve that objective with current searches, the user would have to repeat the instance of the \nsame search by following the coastlin e and zooming in to see results that are right on the beach. Similar problems can \nbe identified in searching by other criteria. It would be very helpful for users to be able to construct ranges with \nboolean operators, and then perform the search in those r anges, rather than constructing multiple searches.  \n \nObjectives  \nDevelop an application that allows the user to build a composite area, with a map user interface, and turn that into a \nboolean search syntax that can then be used to perform the actual search i nto a database (SQL).  \nFor example, if a rectangular area is defined with (GPS1.1, GPS1.2, GPS2.1, GPS2.2) then a composite area can \nbe (GPS1.1, GPS1.2, GPS2.1, GPS2.2) OR (GPS3.3, GPS3.4, GPS4.3, GPS4.4). Once the composite area is \ncompleted, then the sear ch is transformed into SQL queries in a database.  \nA previous Capstone team developed a prototype to demonstrate the problem and solution. In Phase 2, the \nobjective is to develop a functioning system that uses in addition to the Google Maps API, data from v arious services \n(e.g., Yelp, AirBnB, etc.) rather than saving data in a SQL database. A Premium feature will be to define areas in terms \nof composite polygons, rather than simple rectangles.",
    "22F-11-Bottling Change Part Wear Measuring Tool": "Background  \nE & J G allo Winery 's bottling facility in Modesto California produces several million cases annually. Most of these \ncases are produced in glass bottles. These bottles need to be transferred smoothly inside filling, capping, and corking \nequipment to maintain quali ty. Typically, plastic change parts are used in this application.  \n \nProblem(s)  \nThe plastic used to transfer and position bottles wears over time. As the plastic wears the pocket that these bottles fit \ninto enlarge allowing for unwanted bottle movement. If t he pocket becomes too large, quality defects can be \nintroduced on the finished product.  \n \nObjectives  \nDesign a tool that can be used to measure the pocket size in a variety of change parts. The goal is to have a tool that is \noperational with one hand, provid es repeatable measurements independent of the person using the tool, and measures \ndown to 10 thousandth of an inch. Tool should be designed for 750ml and 1.5L bottles.",
    "22F-12-Counting Vegetable Seedlings": "Background  \nCalifornia Transplants  is a nursery that p roduces vegetable seedlings for professional growers throughout \nCalifornia. Located in Newman, CA and primarily known for growing tomato seedlings, we now are producing many \ndifferent species of plants for growers the entire year. This project falls under software and hardware.  \n \nProblem(s)  \nWe currently manually count germination rates or usable plants per order as a percentage. That data then is entered \ninto our system manually which gives us the best estimate of our inventory per order. We are looking for a system that \ncan scan the greenhouse and count the number of viable plants per order and produce a report. We are looking for \ntechnology to help us get an accurate inventory report to determine needs or changes downstream.  \n \nObjectives  \nDevelop software that will work with a series of cameras that could accurately count the number of usable plants per  \norder. There could be multiple orders in a greenhouse.",
    "22F-13-Inventory of Trees - Phase 2: Size and Alive": "Background  \nIn the Engineering Capstone - Innovate to Grow program we identify market needs and develop project ideas that \ncan lead to new products and services. Previous projects included off -ground drying of harvested almonds, and \nidentification of bareroot trees, in collaboration with partnerin g farms. This project will partner with UC Merced \nExperimental Farm . \n \nProblem(s)  \nFarms take inventory of thousands of trees across hundreds of acres by manually counting and measuring them. This \nprocess is very labor -intensive and repetitive. Innovate to G row saw this problem as an opportunity. In a previous \nCapstone project, teams were tasked to develop vision and learning software to identify a tree and its grafting point, \nand mapping the inventory of trees.  \n \nObjectives  \nIn this Phase 2, the objective is t o build on the previous software and to develop a system that identifies whether the \ntree is alive, and computes its size (trunk width above grafting point, and size of canopy).",
    "22F-14-Automated Barcode Scanning of Containers in an Outdoor Warehouse": "Backgrou nd \nThe Morning Star Company  accounts for over 30% of the California processing tomato production, supplying 40% \nof the U.S. ingredient tomato paste and diced tomato markets, with industrial sales of approximately $350 million. \nMorning Star is a vertically integrated company with business units supplying and servicing all aspects of the tomato \nindustry from seeding and growing in the green house to processing and canning at our factories. The harvest and \nfactory production seasons are most heavily concentrat ed between July and October. During this time period, \nbetween our 3 factories we store 1 million+ bulk containers of tomato ingredients (55 -gallon drums and 300 -gallon \nbags) in outside warehouses, stacked 4 -5 high in rows 14 -30 deep (56' -120'), with a few inches between rows. These \nproducts are then available for shipment 12 months of the year. This project focuses on improving the product -\nputaway process, though the technology, if successful, could also be used to improve the shipping process as well.  \n \nProblem(s)  \nCurrently we stack our containers 2 -high on a mule train for transport to the warehouse. The forklift operators need \nto get off their forklifts and use industrial scanners to scan each of these labels from a distance of 2 \u2019 \u2013 6\u2019 away. This is \nsometimes geographically far from the putaway location as forklift operators will seek out a shaded area to prevent the \nglare of the sun on the labels from interfering with the scan. The operators then manually input into the scanners \nwhere they plan to store the containers (section and row). Human errors, or scanner errors can result in some \ncontainers being scanned with an invalid container number, not being scanned at all, or being scanned to the wrong \nsection/row. Throughout the yea r, distribution colleagues will pull these containers from the warehouse and prepare \nthem for shipment. Their efficiency is reduced when they need to search for containers that were not properly \nscanned. Our inventory accuracy and forklift driver productiv ity both during putaway and shipping will be improved \nif we can very reliably scan containers automatically from the forklift.  \nConstraints:  \n- Specified hardware would need to be robust enough to endure the rough handling inherent in our operation.  \n- Full implementation would preferentially be able to use existing forklift -mounted computer hardware, but \nseparate hardware/software could be an option or preferable for proof -of-concept.  \n \nObjectives  \nAs the forklift approaches a container to pick it up, or alter nately as is backs away from a container after it sets the  \ncontainer down, a camera could capture and accurately read the container ID and queue each ID for transaction to a  \nlocation (section, row) specified by a forklift driver. There may be functionally equivalent alternatives to this process \nthat the team can identify.  \nThe most critical technology to develop is a robust ability to capture and read the barcode labels under a variety \nof conditions. A user -friendly interface that is intuitive, robust, and e fficient would be important as well. Additional \nfunctionality to apply the core technology to additional use cases (shipping, etc.) would be a bonus, as would any work \nto pave the way for this functionality to be easily integrated with existing information  systems (e.g., make it easier to \ngo from prototype to full implementation). One way to measure performance would be the expected ROI ... what \nwould we expect the full implementation to cost, compared to the expected value of improved productivity and \ninventory accuracy.",
    "22F-15-Vision System to Detect Product Loss in Tomato Harvesting": "Background  \nThe Morning Star Company  accounts for over 30% of the California processing tomato production, supplying 40% \nof the U.S. ingredient tomato paste and diced tomato markets, with industrial sales of approximately $350 million. \nMorning Star is a vertically integrated company with business units supplying and servicing all aspects of the tomato \nindustry from seeding and growing in the green house to processing an d canning at our factories.  \n \nProblem(s)  \nCalifornia Sun Grower Services (CSGS) is a business unit within Morning Star that provides custom tomato \nharvesting services. Between the Months of July and November, CSGS harvests production tomatoes across \nCaliforn ia to supply fresh high -quality tomatoes to our factories for use in products such as tomato paste, ketchup, \nand salsa. CSGS provides a custom harvesting service for growers and farmers who have contracted with Morning \nStar to grow tomatoes for the factori es. In providing this service, CSGS is committed to performing a high -quality \nharvest with the goals of minimal product loss, cleanly harvested loads, and high productivity.  \n \nObjectives  \nTo improve harvester drivers\u2019 abilities to meet these goals, CSGS woul d like to implement cameras connected to \ncomputers with object detection software on to the harvesters with the ability to identify tomatoes that have been left \non the ground behind it. The AI vision system could provide real -time feedback to the harvester  drivers by identifying \nthe product and classifying the condition it is in, such as its size, location on the bed, or relative intactness. All of \nthese could help the driver to know when a problem is occurring and what corrective actions they should take. Along \nwith feedback, the classifications could be stored, and reports generated to give insights to product loss, and compare \nthe quality of harvesting between machines.",
    "22F-16-Autonomous Vehicle User Interface and Data System": "Background  \nWith the onset of autonomous vehicles inside nearly every facet of life there is at least one underdeveloped section of \nindustry. The industrial sector, in our case material handling in factories, has been extremely underdeveloped for the \nuse of autonomous  vehicles. The environment in which they must operate in is highly variable, differentiating terrain, \nand must interact with the users throughout the day. This user interaction is the area of interest in this project by \nMilano Technical Group  (MTG) and can  have profound effects on the industry of autonomy.  \n \nProblem(s)  \nThe user interaction between current machine operators and autonomous vehicles is a problem yet to be tackled by \nlarger robotics companies in the warehouse and factory settings. This software suite will interact with the shift \nsupervisors, warehouse workers, and machine operators. It will perform asset tracking and performance metric \nreporting. solving the problem of underutilization in autonomy.  \n \nObjectives  \nWe will be exploring and hopefully p roductizing a user interaction suite that engages both the autonomous fleet \nsupervisors and the current machine operators. The system will be operating on multiple user interfaces and will \ncontrol the fleet through a novel fleet management software that MT G has been developing for the past several years.  \nThe user interactions suite will consist of a front -end web -app UI that will allow different personnel to interact \nwith the autonomous fleet, a telematics server to keep track of the status of the vehicle a nd update the requested \npaths, and a route planner to command the fleet.  \nThe web -app UI will have different pages with separate features for each of the roles in the warehouse. For fleet \nintegration, a map drawing page is required to recreate the warehouse layout with different pickup and drop -off \nlocations. Once the warehouse layout is created, the potential paths the vehicles can take will be added to the map. \nThese paths will be created as binary trees consisting of different nodes and branches. The UI needs to visualize the \nvehicle paths within the warehouse map. The fleet s upervisors will have access to a page that allows them to create \npickup and drop -off schedules and enter information about the transported goods. The user interface needs to have a \nlimited functionality section for the warehouse workers and the machine ope rators that display the status of the \nvehicle and the materials that need to be loaded to it. Once the vehicle is loaded, the workers need to have a way of \nsignaling the task is completed and that the vehicle can move to the next task.  \nThe telematics serv er will be responsible for the cooperation of the vehicles and the warehouse workers. It will \ncontain the status of each of the vehicles by storing position, battery percentage, loaded inventory and the list of target \nnodes. The server needs to handle all the information used by the UI and allow the UI to display the status of all the \nvehicles at once. The telematics server will receive constant updates from the vehicles and will also update the tasks \nthat the vehicles need to perform. The communication bet ween the vehicles and the telematics server will be done \nusing the REST API.  \nThe last part of the user interaction suite will be the path planning and route scheduling module. It will take the \ninput given by the fleet supervisor and plan the required actio ns needed to be taken by the vehicles and the warehouse \nworkers. This module will generate a list of the nodes the vehicle needs to visit in order and estimate the time of \narrival to each node based on the path length and expected time to load the vehicle.  The module can use tree traversal \nmethods to generate the most optimum path.  \nOur team at MTG is ready to assist in any way possible.",
    "22F-17-Automated Inspection Using Artificial Intelligence": "Background  \nOmron Robotics and Safety Technologies  (ORT) designs and manufactures new robot and safety sensor products. \nHeadquartered in Pleasanton, California, a diverse team of electrical, manufacturing, mechanical, quality, software, \nsystems, and test engineers work with business partners to identify new markets for which we invent our next -\ngeneration technologies.  \n \nProblem(s)  \nInspection is labor -intensive. Automating inspection results in cost savings for ORT. Without inspection, there is a \nrisk that defective products may reach customers. Developing a machine learni ng approach to automate, with high \ncertainty, what is a defect and what is acceptable is valuable for ORT.  \n \nObjectives  \nEvaluate examples of visual defects per predefined inspection criteria using a machine learning algorithm/artificial \nintelligence that re duces inspection time and increases inspection accuracy. This will be achieved using a stationary \ncamera & the camera's UI to capture images of defects on robotic parts of various sizes. Students are expected to \ndevelop an application utilizing ML algorith m/AI to ensure that defects are correctly identified under standard work \ncell lighting conditions.",
    "22F-18-Vision -Based Estimation of Basil Yield": "Background  \nSupHerb Farms  is a company located in Turlock, CA; whose primary business is contracting culinary herb \nproduction, processing of those herbs, and sales of the finished products around the world. The primary herbs \nproduced by SupHerb Farms are Basil, Cilantro and Parsle y. \n \nProblem(s)  \nSupHerb  Farms would like to be able to accurately determine harvestable pounds of herbs from each production field \nprior to harvest. Herb crops grow every day and maintaining a schedule is difficult for SupHerb as we visually \nestimate fields and often make errors  in our estimation. These errors either cause plant downtime due to lack of crop \nor they cause collisions between different fields that produce more pounds than were estimated. These occurrences \ncause product quality issues and potentially plant equipment downtime because we try to push processing machinery \nabove its intended productivity.  \n \nObjectives  \nFirst experiment will be executed at the UC Merced Experimental Farm Greenhouse in collaboration with SupHerb \nFarms:  the capstone software team's objective i s to develop a vision/learning system to detect basil leaves and \nestimate volume of leaves in an area planted with basil, by taking images every day as the basil grows. The weight is \ncalculated by the Farm Manager after every mow.  \nThis phase of the project  is to utilize cameras to see if they can provide accurate measurements of the crop mass \nof basil in the area that is photographed. Herbs are grown primarily for their leaves and the focus of this work should \nbe to identify the total pounds of plant materi al that would be harvested from the area but to also identify the weight \nof unusable stems and the weight of usable leaves. It should be understood that we try to harvest stems not longer \nthan 15 inches; if a plant were to have two stems and the longest is  22 inches and the shorter stem is 17 inches, the \n22-inch stem will have the top 15 inches cut off and the shorter stem will be cut off at the same so only 10 inches \nwould be harvested.  Basil is normally harvested 4 times in Central California with the fi rst harvest starting when the \ntotal length of average stems are 20 inches from the ground to the tip, thus leaving 5 inches of stubble from which the \nnext cutting grows.  On the next cut we would let the basil reach 21 inches of length and cut 6 inches fro m the \nground, so we do not harvest the woody stubble. The 3rd and 4th cuts continue up 1 inch each."
}